// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;

using System.IO;
using System.Linq;
using System.Collections.Generic;
using Utilities;

namespace Evacuation
{
	public partial class viewSelectPod : NSViewController
	{
		private readonly string _savedSearchFile = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) +
				   "/Documents/XenReporter.txt";
        PodTable.DataSource _podDataSource = new PodTable.DataSource();

		private List<String> _pods
		{
			get
			{
				return _podDataSource.Pods;
			}
		}

		public viewSelectPod (IntPtr handle) : base (handle)
		{
		}

		public override void AwakeFromNib()
		{
			base.AwakeFromNib();

			_podDataSource.Pods.Clear();

			if (File.Exists(_savedSearchFile))
			{
				using (var file = new StreamReader(_savedSearchFile))
				{
					while (file.Peek() > -1) _pods.AddNonEmpty(file.ReadLine());
				}
			}

			tblPods.DataSource = _podDataSource;
			tblPods.Delegate = new PodTable.Delegate(_podDataSource);
			tblPods.SelectAll(this);
            Models.Password.Load();
			UpdateSetPassButton();

		}

        public override void ViewDidLoad()
        {
		}

        partial void cmdSetPass(NSObject sender)
        {
			NSAlert alert = new NSAlert()
			{
				AlertStyle = NSAlertStyle.Informational,
				InformativeText = "Leave empty to clear.",
				MessageText = "Update Password"
			};
			NSSecureTextField input = new NSSecureTextField(new CoreGraphics.CGRect(0, 0, 200, 24));

			alert.AccessoryView = input;
			alert.RunModal();
			Models.Password.Save(input.StringValue);
			Models.Password.Load();
            UpdateSetPassButton();
		}

        private void UpdateSetPassButton()
        {
			if (Models.Password.value == "")
			{
				//btnSetPass.Title = "Set Pass"; 
				SetPassButton.Title = "Set Pass";
			}
			else
			{
				//btnSetPass.Title = "Update Pass";
				SetPassButton.Title = "Update Pass";
			}
        }

		public override void PrepareForSegue(NSStoryboardSegue segue, NSObject sender)
		{
			base.PrepareForSegue(segue, sender);

			// Take action based on Segue ID
			switch (segue.Identifier)
			{
				case "ViewSelectHyp":
					ViewState.Pod = "";
					if (tblPods.SelectedRow >= 0) ViewState.Pod = _podDataSource.Pods[(int)tblPods.SelectedRow];
					NSWindowController wind = (NSWindowController)this.View.Window.WindowController;
					wind.Close();
                break;
			}
		}

        partial void SelectPodClick(NSObject sender)
        {
            btnLoadPod.Enabled = (tblPods.SelectedRowCount == 1);
        }
	}
}
